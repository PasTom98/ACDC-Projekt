pipeline{
    environment {     
    SSH_VM = credentials('acdc_presentation_pw')     
    }
    agent {
        label 'deploy'
        }
    stages{
        stage("Remove old Docker files") {
            steps{
                script{
                    sh 'echo debian | ssh -tto StrictHostKeyChecking=no debian@localhost -p 22022 ./prune_docker.sh --password-stdin'
                }
            }
        }
        stage("Pull Docker-Image") {
            steps{
                script{
                sh 'echo debian | ssh -tto StrictHostKeyChecking=no debian@localhost -p 22022 ./deploy.sh --password-stdin'
                sh 'echo $SSH_VM_PW'
                }
            }
        }
        stage("Start container"){
            steps{
                script {
                    sh 'ssh -tto StrictHostKeyChecking=no debian@localhost -p 22022 "docker run --name acdc --publish 8080:8080 -d pato98/acdc_presentation && docker run --name db --publish 3308:3306 -d pato98/acdc_db_presentation"'
                    sh 'echo $SSH_VM_PW'
                }
            }
        }
        stage("Connect both containers via network"){
            steps{
                script{
                    sh 'ssh -tto StrictHostKeyChecking=no debian@localhost -p 22022 "docker network create acdc_lamp && docker network connect acdc_lamp acdc && docker network connect acdc_lamp db"'
                    sh 'echo $SSH_VM_PW'
                }
            }
        }
    }
}