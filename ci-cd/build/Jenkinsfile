pipeline{
    environment {     
    DOCKERHUB_CREDENTIALS= credentials('dockerhub_acces_token')     
    }
    agent {
        label 'docker'
    }
    stages{
        stage("Verify tooling") {
            steps {
                sh '''
                    docker info
                    docker version
                    docker-compose version
                    '''
            }
        }
        stage("Prune Docker data"){
            steps{
                script {
                    try {
                        sh 'docker system prune -a --volumes -f'
                        echo 'Pruned docker succesfully'
                    } catch (Exception e) {
                        echo 'Something went wrong pruning docker data'
                    }
                }
            }

        }
        stage("Build docker image") {
            steps {
                script {
                    try {
                        dir('docker'){
                            sh 'docker-compose -f docker-compose.yml build'
                        }
                        echo 'build docker image successfully'
                    } catch (Exception e) {
                        echo 'Something went wrong building docker image'
                    }
                }
            }
        }
        stage('Login to Docker Hub') {      	
            steps{                       	
	            sh 'echo Kalle-docker2210| docker login -u pato98 --password-stdin'                		
	            echo 'Login Completed'      
            }           
        }        
        stage('Push Image to Docker Hub') {         
            steps{                            
                sh ' docker push pato98/acdc_presentation'           
                echo 'Push Image Completed test'       
            }            
        }
        stage("Stop docker container after build") {
            steps {
                script {
                    try {
                        dir('docker') {
                            sh 'docker-compose down'
                            sh 'docker ps'
                        }
                            echo 'Stopped container succesfully'
                    } catch (Exception e) {
                        echo 'Something went wron stopping the container'
                    }
                }
            }
        }
    }
}

